#  As per the Application need, we are choosing MySQL 5.7 version.
#
#    Setup MySQL Repo
#    # curl -s -L -o /etc/yum.repos.d/mysql.repo https://raw.githubusercontent.com/roboshop-devops-project/mysql/main/mysql.repo
#
#    Install MySQL
#    # yum remove mariadb-libs -y
#    # yum install mysql-community-server -y
#
#    Start MySQL.
#    # systemctl enable mysqld
#    # systemctl start mysqld
#
#    Now a default root password will be generated and given in the log file.
#    # grep temp /var/log/mysqld.log
#
#    Next, We need to change the default root password in order to start using the database service.
#    # mysql_secure_installation
#
#    You can check the new password working or not using the following command.
#
#    # mysql -u root -p
#
#    Run the following SQL commands to remove the password policy.
#    > uninstall plugin validate_password;
#    Setup Needed for Application.
#    As per the architecture diagram, MySQL is needed by
#
#    Shipping Service
#    So we need to load that schema into the database, So those applications will detect them and run accordingly.
#
#    To download schema, Use the following command
#
#    # curl -s -L -o /tmp/mysql.zip "https://github.com/roboshop-devops-project/mysql/archive/main.zip"
#    Load the schema for Services.
#
#    # cd /tmp
#    # unzip mysql.zip
#    # cd mysql-main
#    # mysql -u root -pRoboShop@1 <shipping.sql

- name: setup MySQL repo
  ansible.builtin.copy:
    src: mysql.repo
    dest: /etc/yum.repos.d/mysql.repo

- name: remove mariadb
  ansible.builtin.yum:
    name: mariadb-libs
    state: absent

- name: install MySQL
  ansible.builtin.yum:
    name: mysql-community-server
    state: present

- name: start MySQL server
  ansible.builtin.systemd:
    name: mysqld
    state: restarted
    enabled: yes

- name: grab default password
  ansible.builtin.shell: grep 'temporary passwdord' /var/log/mysqld.log | awk '{print $NF}'
  register: DEFAULT_PASSSWORD

- name: check the new password is working
  ansible.builtin.shell: echo 'show databases;' | mysql -uroot -p"{{NEW_PASSWORD}}"
  register: CHECK_NEW_PASSWORD
  ignore_errors: yes

- name: print
  ansible.builtin.debug:
    msg: "{{CHECK_NEW_PASSWORD}}"

- name: copy password reset sql file
  ansible.builtin.template:
    src: pass.sql
    dest: /tmp/pass.sql
  when: CHECK_NEW_PASSWORD.failed

- name: reset password
  ansible.builtin.shell: mysql --connect-expired-password -uroot -p"{{DEFAULT_PASSWORD.stdout}}" </tmp/pass.sql
  when: CHECK_NEW_PASSWORD.failed